[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]
name = "scrapy-lint"
version = "0.0.2"
description = "A linter for Scrapy projects"
dependencies = [
    "packaging>=20.0",
    "pathspec",  # TODO: Find the minimum required version
    "ruamel.yaml>=0.17.5",
    "tomli; python_version<'3.11'",  # TODO: Find the minimum required version
    'typing_extensions>=4.6.0; python_version<"3.10"'
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.rst"
requires-python = ">=3.9"
authors = [{ name = "Valdir Stumm Junior", email = "stummjr@gmail.com" }]
maintainers = [{ name = "Valdir Stumm Junior", email = "stummjr@gmail.com" }]

[project.scripts]
scrapy-lint = "scrapy_lint:main"

[project.urls]
Source = "https://github.com/scrapy/flake8-scrapy"
Tracker = "https://github.com/scrapy/flake8-scrapy/issues"
"Release notes" = "https://flake8-scrapy.readthedocs.io/en/latest/changes.html"

[tool.hatch.build.targets.sdist]
include = [
  "/tests",
  "/CHANGES.rst",
  "/tox.ini",
]

[tool.hatch.build.targets.wheel]
packages = ["scrapy_lint"]

[tool.bumpversion]
current_version = "0.0.2"
commit = true
tag = true
tag_name = "v{new_version}"

[[tool.bumpversion.files]]
filename = "CHANGES.rst"
search = "\\(unreleased\\)$"
replace = "({now:%Y-%m-%d})"
regex = true

[[tool.bumpversion.files]]
filename = "README.rst"

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.mypy]
check_untyped_defs = true
exclude = "samples"

[tool.pylint.master]
load-plugins=[
    "pylint_per_file_ignores",
]

[tool.pylint.'message control']
# Covered by Ruff:
# PLC0415: import-outside-toplevel
# PLR0911: too-many-return-statements
# PLR0912: too-many-branches
# PRL0915: too-many-statements
disable = """
    import-outside-toplevel,
    line-too-long,
    missing-class-docstring,
    missing-function-docstring,
    missing-module-docstring,
    too-many-branches,
    too-many-return-statements,
    too-many-statements
"""
per-file-ignores = [
    "/docs/conf.py:invalid-name",
    "/tests/:duplicate-code",
]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
]

[tool.ruff.lint]
extend-select = [
    # flake8-builtins
    "A",
    # flake8-async
    "ASYNC",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-commas
    "COM",
    # pydocstyle
    "D",
    # flake8-future-annotations
    "FA",
    # flynt
    "FLY",
    # refurb
    "FURB",
    # isort
    "I",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging
    "LOG",
    # Perflint
    "PERF",
    # pygrep-hooks
    "PGH",
    # flake8-pie
    "PIE",
    # pylint
    "PL",
    # flake8-pytest-style
    "PT",
    # flake8-use-pathlib
    "PTH",
    # flake8-pyi
    "PYI",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-raise
    "RSE",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-slots
    "SLOT",
    # flake8-debugger
    "T10",
    # flake8-type-checking
    "TC",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
    # pycodestyle warnings
    "W",
    # flake8-2020
    "YTT",
]
ignore = [
    # ruff format recommends disabling this rule
    "COM812",
    # No API docs needed
    "D",
    # asserts for mypy
    "S101",
]

[tool.ruff.lint.per-file-ignores]
# FLY002: "\n".join(lines) instead of f-strings
# PLR2004: Line and column numbers are expressed with hardcoded ints.
# S: Security issues, irrelevant for tests
"tests/**" = ["FLY002", "PLR2004", "S"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "pep257"
